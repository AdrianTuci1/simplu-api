# =============================================================================
# Lambda Authorizer Configuration
# =============================================================================

# Enable/disable Lambda authorizer completely
# Default: true
LAMBDA_AUTHORIZER_ENABLED=true

# Bypass Lambda authorizer for development
# Default: false
LAMBDA_AUTHORIZER_BYPASS=false

# Enable mock user for development
# Default: false
LAMBDA_AUTHORIZER_MOCK_USER=false

# Mock user configuration (used when LAMBDA_AUTHORIZER_MOCK_USER=true)
LAMBDA_AUTHORIZER_MOCK_USER_ID=mock-user-123
LAMBDA_AUTHORIZER_MOCK_USER_NAME=mock.user@example.com
LAMBDA_AUTHORIZER_MOCK_BUSINESS_ID=mock-business-456
LAMBDA_AUTHORIZER_MOCK_ROLES=[{"locationId":"mock-location-789","locationName":"Mock Location","role":"admin","permissions":["read","write","delete"]}]

# =============================================================================
# Database Configuration
# =============================================================================

# Database type: 'citrus' or 'rds'
DATABASE_TYPE=citrus

# =============================================================================
# Read Operations Configuration (GET endpoints)
# =============================================================================

# Force RDS for read operations (GET endpoints) even when DATABASE_TYPE=citrus
# Default: false (uses the configured DATABASE_TYPE)
FORCE_RDS_FOR_READS=false

# Force Citrus for read operations (GET endpoints) even when DATABASE_TYPE=rds
# Default: false (uses the configured DATABASE_TYPE)
FORCE_CITRUS_FOR_READS=false




# RDS Configuration
RDS_HOST=localhost
RDS_PORT=5432
RDS_USERNAME=postgres
RDS_PASSWORD=postgres
RDS_DATABASE=simplu
RDS_SSL=false
RDS_SYNCHRONIZE=false
RDS_LOGGING=false

# Citrus Sharding Configuration
CITRUS_SERVER_URL=http://localhost:8080
CITRUS_API_KEY=your-citrus-api-key
CITRUS_TIMEOUT=5000
CITRUS_RETRY_ATTEMPTS=3

# =============================================================================
# JWT Configuration
# =============================================================================

JWT_SECRET=your-secret-key
JWT_EXPIRES_IN=1d

# =============================================================================
# AWS Configuration
# =============================================================================

AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-access-key
AWS_SECRET_ACCESS_KEY=your-secret-key

# =============================================================================
# AWS S3 Configuration (for file uploads)
# =============================================================================

# S3 bucket for resource files (medic, patient files)
S3_RESOURCES_BUCKET=simplu-resources

# =============================================================================
# AWS SES Configuration (for invitation emails)
# =============================================================================

# Enable/disable SES email sending
SES_ENABLED=true

# Sender email address (must be verified in AWS SES)
SES_SENDER_EMAIL=no-reply@simplu.io

# =============================================================================
# AWS Cognito Configuration (REQUIRED for Bearer token authentication)
# =============================================================================

# Cognito User Pool ID (REQUIRED for authentication)
COGNITO_USER_POOL_ID=us-east-1_xxxxxxxxx

# Cognito Client ID (REQUIRED for authentication)
COGNITO_CLIENT_ID=xxxxxxxxxxxxxxxxxxxxxxxxxx

# =============================================================================
# Authentication Configuration
# =============================================================================

# Enable/disable Lambda authorizer (legacy)
# Default: false (now using Bearer token with Cognito)
LAMBDA_AUTHORIZER_ENABLED=false

# Bypass authentication for development (use with caution)
# Default: false
AUTH_BYPASS=false

# AI Server Key for internal service authentication
# Used by AI agent server cron jobs to authenticate with app server
# Generate a secure random string for production
AI_SERVER_KEY=simplu-secure-communication-wr90w9rew90909
# Mock user for development (when AUTH_BYPASS=true)
# Default: false
AUTH_MOCK_USER=false

# Mock user configuration (used when AUTH_MOCK_USER=true)
AUTH_MOCK_USER_ID=mock-user-123
AUTH_MOCK_USER_NAME=mock.user@example.com
AUTH_MOCK_BUSINESS_ID=mock-business-456
AUTH_MOCK_ROLES=[{"locationId":"mock-location-789","locationName":"Mock Location","role":"admin","permissions":["read","write","delete"]}]

# =============================================================================
# Kinesis Configuration
# =============================================================================

KINESIS_STREAM_NAME=resources-operations
KINESIS_SHARD_COUNT=1

# =============================================================================
# Redis Configuration
# =============================================================================

REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# =============================================================================
# Server Configuration
# =============================================================================

PORT=3000
NODE_ENV=development

# =============================================================================
# AI Agent Server Configuration
# =============================================================================

# AI Agent Server URL for message automation
AI_AGENT_SERVER_URL=http://localhost:3003

# AI Agent Server API Key for authentication
AI_AGENT_API_KEY=your-ai-agent-api-key

# =============================================================================
# Frontend Configuration
# =============================================================================

# Base domain for generating frontend URLs
# Frontends will be: dental.simplu.io, gym.simplu.io, hotel.simplu.io
BASE_DOMAIN=simplu.io

# =============================================================================
# DynamoDB Configuration
# =============================================================================

# Business Info Table
DYNAMODB_BUSINESS_INFO_TABLE=business-info

# External API Config Table Name (DynamoDB)
# Must match the table name used by ai-agent-server
DYNAMODB_EXTERNAL_API_CONFIG_TABLE=business-external-api-config

# DynamoDB Region (optional, defaults to AWS_REGION)
AWS_DYNAMODB_REGION=eu-central-1

# DynamoDB Endpoint (optional, for local development)
# DYNAMODB_ENDPOINT=http://localhost:8000

# =============================================================================
# Legacy Cognito Configuration (if needed)
# =============================================================================

# COGNITO_USER_POOL_ID=your-user-pool-id
# COGNITO_CLIENT_ID=your-client-id 