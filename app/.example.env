# =============================================================================
# SIMPLU API - Environment Variables Configuration
# =============================================================================
# Copy this file to .env and update the values according to your environment
# =============================================================================

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application port (default: 3000)
PORT=3000

# Node environment (development, production, test)
NODE_ENV=development

# =============================================================================
# JWT AUTHENTICATION
# =============================================================================

# JWT secret key for token signing (REQUIRED in production)
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# JWT token expiration time (default: 1d)
JWT_EXPIRES_IN=1d

# =============================================================================
# MAIN DATABASE CONFIGURATION (Citrus-Managed Shards)
# =============================================================================

# Main database configuration for Citrus-managed sharded resource operations
# Note: Individual shard connections are managed by Citrus server
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=postgres
DATABASE_NAME=simplu

# =============================================================================
# AWS CONFIGURATION
# =============================================================================

# AWS region (default: us-east-1)
AWS_REGION=us-east-1

# AWS credentials (optional - uses IAM roles if not provided)
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key

# =============================================================================
# AWS COGNITO CONFIGURATION
# =============================================================================

# Cognito User Pool ID (REQUIRED for authentication)
COGNITO_USER_POOL_ID=us-east-1_xxxxxxxxx

# Cognito Client ID (REQUIRED for authentication)
COGNITO_CLIENT_ID=xxxxxxxxxxxxxxxxxxxxxxxxxx

# =============================================================================
# AWS DYNAMODB CONFIGURATION (Business Info Database)
# =============================================================================

# DynamoDB table name for business info (default: business-info)
# This table stores business metadata, not resource data
DYNAMODB_BUSINESS_INFO_TABLE=business-info

# DynamoDB endpoint (for local development with DynamoDB Local)
# Uncomment and set for local development
# DYNAMODB_ENDPOINT=http://localhost:8000

# =============================================================================
# KAFKA CONFIGURATION
# =============================================================================

# Kafka client ID (default: simplu-api)
KAFKA_CLIENT_ID=simplu-api

# Kafka consumer group ID (default: simplu-api-group)
KAFKA_GROUP_ID=simplu-api-group

# Kafka brokers (comma-separated list, default: localhost:9092)
KAFKA_BROKERS=localhost:9092

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis host (default: localhost)
REDIS_HOST=localhost

# Redis port (default: 6379)
REDIS_PORT=6379

# Redis password (optional)
REDIS_PASSWORD=

# Redis database number (default: 0)
REDIS_DB=0

# =============================================================================
# CITRUS SHARDING SERVICE CONFIGURATION
# =============================================================================

# Citrus server URL (REQUIRED - manages all database shards)
CITRUS_SERVER_URL=http://localhost:8080

# Citrus API key (REQUIRED for Citrus integration)
CITRUS_API_KEY=your-citrus-api-key

# Citrus request timeout in milliseconds (default: 5000)
CITRUS_TIMEOUT=5000

# Citrus retry attempts (default: 3)
CITRUS_RETRY_ATTEMPTS=3

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Enable request logging (true/false)
ENABLE_REQUEST_LOGGING=true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# CORS origins (comma-separated list)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# Rate limiting - requests per minute
RATE_LIMIT_REQUESTS_PER_MINUTE=1000

# =============================================================================
# MONITORING & HEALTH CHECKS
# =============================================================================

# Health check endpoint enabled (true/false)
HEALTH_CHECK_ENABLED=true

# Metrics collection enabled (true/false)
METRICS_ENABLED=true

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Enable database synchronization (auto: true in development, false in production)
# This is automatically set based on NODE_ENV

# Enable database logging (auto: true in development, false in production)
# This is automatically set based on NODE_ENV

# Seed data enabled (true/false)
SEED_DATA_ENABLED=false

# =============================================================================
# EXTERNAL SERVICES (Optional)
# =============================================================================

# Email service configuration
# EMAIL_SERVICE_URL=
# EMAIL_API_KEY=

# SMS service configuration
# SMS_SERVICE_URL=
# SMS_API_KEY=

# Payment gateway configuration
# PAYMENT_GATEWAY_URL=
# PAYMENT_API_KEY=

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

# Application version
APP_VERSION=1.0.0

# Build timestamp
BUILD_TIMESTAMP=

# =============================================================================
# ARCHITECTURE NOTES
# =============================================================================
#
# DATABASE ARCHITECTURE:
# 1. BUSINESS INFO DATABASE: AWS DynamoDB
#    - Stores business metadata (name, type, locations, settings)
#    - Not sharded - single table for all business info
#    - Table: DYNAMODB_BUSINESS_INFO_TABLE
#
# 2. MAIN DATABASE: PostgreSQL (Citrus-Managed Shards)
#    - Stores all resource data (patients, appointments, etc.)
#    - Sharded based on businessId + locationId
#    - ALL SHARD MANAGEMENT HANDLED BY CITRUS SERVER
#    - Citrus automatically creates, manages, and assigns shards
#    - No manual shard configuration needed in this application
#
# CITRUS SHARDING SERVICE:
# - Manages all database shards automatically
# - Handles shard creation, assignment, and capacity management
# - Provides connection strings for each business+location combination
# - Monitors shard health and performance
# - Automatically scales by creating new shards when needed
#
# SHARDING FLOW:
# 1. Application requests shard for businessId + locationId
# 2. Citrus determines appropriate shard (creates new if needed)
# 3. Citrus returns connection string and shard details
# 4. Application connects directly to assigned shard
# 5. All resource operations performed on the assigned shard
#
# =============================================================================
# NOTES
# =============================================================================
#
# 1. REQUIRED VARIABLES FOR PRODUCTION:
#    - JWT_SECRET (must be a strong, unique secret)
#    - COGNITO_USER_POOL_ID
#    - COGNITO_CLIENT_ID
#    - DATABASE_PASSWORD
#    - CITRUS_SERVER_URL
#    - CITRUS_API_KEY
#    - AWS credentials (if using AWS services)
#
# 2. SECURITY NOTES:
#    - Never commit .env files to version control
#    - Use strong, unique secrets for JWT_SECRET
#    - Rotate AWS credentials regularly
#    - Use IAM roles when possible instead of access keys
#    - Secure Citrus API key - it controls all database access
#
# 3. DATABASE NOTES:
#    - Citrus handles all shard creation and management
#    - No manual database setup required for shards
#    - Ensure Citrus server is running and accessible
#    - Monitor Citrus server health and performance
#
# 4. CITRUS INTEGRATION:
#    - Citrus server must be running before starting this application
#    - Citrus manages shard capacity and business distribution
#    - Application only needs to know Citrus server URL and API key
#    - All shard operations go through Citrus API
#
# 5. LOCAL DEVELOPMENT:
#    - Use Docker Compose for local services (Redis, Kafka, etc.)
#    - Set up local DynamoDB for testing business info
#    - Configure local Cognito or use mock authentication
#    - Ensure Citrus server is running locally or use mock service
#
# ============================================================================= 