{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "S3 deployment for business with dynamic domain and Block Public Access fix",
  "Parameters": {
    "BusinessId": {
      "Type": "String",
      "Description": "Business ID",
      "Default": "test-business-123"
    },
    "DomainLabel": {
      "Type": "String",
      "Description": "Domain label for the business",
      "Default": "elite-dental"
    },
    "BusinessType": {
      "Type": "String",
      "Description": "Business type",
      "Default": "dental",
      "AllowedValues": ["dental", "gym", "hotel"]
    },
    "SSLCertificateArn": {
      "Type": "String",
      "Description": "ARN of the SSL certificate for simplu.io domain",
      "Default": ""
    }
  },
  "Resources": {
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Sub": "${DomainLabel}.simplu.io"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": false,
          "BlockPublicPolicy": false,
          "IgnorePublicAcls": false,
          "RestrictPublicBuckets": false
        },
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "index.html"
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": ["*"],
              "AllowedMethods": ["GET", "PUT", "POST", "DELETE", "HEAD"],
              "AllowedOrigins": ["*"],
              "MaxAge": 3000
            }
          ]
        }
      }
    },
    "S3BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "S3Bucket"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PublicReadGetObject",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Sub": "arn:aws:s3:::${S3Bucket}/*"
              }
            }
          ]
        }
      }
    },
    "CloudFrontOriginAccessIdentity": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": {
            "Fn::Sub": "OAI for ${BusinessId}"
          }
        }
      }
    },
    "CloudFrontDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            {
              "Fn::Sub": "${DomainLabel}.simplu.io"
            }
          ],
          "Origins": [
            {
              "Id": "S3Origin",
              "DomainName": {
                "Fn::GetAtt": ["S3Bucket", "DomainName"]
              },
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Sub": "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
                }
              }
            }
          ],
          "DefaultCacheBehavior": {
            "TargetOriginId": "S3Origin",
            "ViewerProtocolPolicy": "redirect-to-https",
            "AllowedMethods": ["GET", "HEAD", "OPTIONS"],
            "CachedMethods": ["GET", "HEAD"],
            "Compress": true,
            "ForwardedValues": {
              "QueryString": false,
              "Cookies": {
                "Forward": "none"
              }
            },
            "DefaultTTL": 0,
            "MaxTTL": 31536000,
            "MinTTL": 0
          },
          "CacheBehaviors": [
            {
              "PathPattern": "/static/*",
              "TargetOriginId": "S3Origin",
              "ViewerProtocolPolicy": "redirect-to-https",
              "AllowedMethods": ["GET", "HEAD"],
              "CachedMethods": ["GET", "HEAD"],
              "Compress": true,
              "ForwardedValues": {
                "QueryString": false,
                "Cookies": {
                  "Forward": "none"
                }
              },
              "DefaultTTL": 86400,
              "MaxTTL": 31536000,
              "MinTTL": 0
            },
            {
              "PathPattern": "*.js",
              "TargetOriginId": "S3Origin",
              "ViewerProtocolPolicy": "redirect-to-https",
              "AllowedMethods": ["GET", "HEAD"],
              "CachedMethods": ["GET", "HEAD"],
              "Compress": true,
              "ForwardedValues": {
                "QueryString": false,
                "Cookies": {
                  "Forward": "none"
                }
              },
              "DefaultTTL": 86400,
              "MaxTTL": 31536000,
              "MinTTL": 0
            },
            {
              "PathPattern": "*.css",
              "TargetOriginId": "S3Origin",
              "ViewerProtocolPolicy": "redirect-to-https",
              "AllowedMethods": ["GET", "HEAD"],
              "CachedMethods": ["GET", "HEAD"],
              "Compress": true,
              "ForwardedValues": {
                "QueryString": false,
                "Cookies": {
                  "Forward": "none"
                }
              },
              "DefaultTTL": 86400,
              "MaxTTL": 31536000,
              "MinTTL": 0
            }
          ],
          "Enabled": true,
          "DefaultRootObject": "index.html",
          "CustomErrorResponses": [
            {
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html"
            },
            {
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html"
            }
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Ref": "SSLCertificateArn"
            },
            "SslSupportMethod": "sni-only",
            "MinimumProtocolVersion": "TLSv1.2_2021"
          },
          "HttpVersion": "http2",
          "Comment": {
            "Fn::Sub": "CloudFront distribution for ${BusinessId}"
          }
        }
      }
    },
    "Route53Record": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneName": "simplu.io.",
        "Name": {
          "Fn::Sub": "${DomainLabel}.simplu.io"
        },
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": ["CloudFrontDistribution", "DomainName"]
          },
          "HostedZoneId": "Z2FDTNDATAQYW2"
        }
      }
    }
  },
  "Outputs": {
    "BucketName": {
      "Description": "Name of the S3 bucket",
      "Value": {
        "Ref": "S3Bucket"
      }
    },
    "CloudFrontDomain": {
      "Description": "CloudFront distribution domain",
      "Value": {
        "Fn::GetAtt": ["CloudFrontDistribution", "DomainName"]
      }
    },
    "AppUrl": {
      "Description": "URL of the business client app",
      "Value": {
        "Fn::Sub": "https://${DomainLabel}.simplu.io"
      }
    },
    "DistributionId": {
      "Description": "CloudFront distribution ID",
      "Value": {
        "Ref": "CloudFrontDistribution"
      }
    }
  }
}
