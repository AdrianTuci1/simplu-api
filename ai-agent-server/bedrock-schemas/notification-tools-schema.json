{
  "openapi": "3.0.0",
  "info": {
    "title": "Notification Tools API",
    "version": "1.0.0",
    "description": "Tools for sending notifications and external messages"
  },
  "paths": {
    "/send_external_message": {
      "post": {
        "summary": "Send external message via Meta WhatsApp, SMS, or Email",
        "description": "Send messages through external channels (WhatsApp via Meta, SMS via Twilio/SNS, Email via Gmail)",
        "operationId": "send_external_message",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "provider",
                  "to",
                  "message",
                  "businessId"
                ],
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "meta",
                      "sms",
                      "email"
                    ],
                    "description": "The external provider to use (meta for WhatsApp, sms for SMS, email for Gmail)"
                  },
                  "to": {
                    "type": "string",
                    "description": "Recipient phone number (for meta/sms) or email address (for email)"
                  },
                  "message": {
                    "type": "string",
                    "description": "The message content to send"
                  },
                  "subject": {
                    "type": "string",
                    "description": "Email subject (only for email provider)"
                  },
                  "businessId": {
                    "type": "string",
                    "description": "Business ID to use for credentials lookup"
                  },
                  "locationId": {
                    "type": "string",
                    "description": "Location ID (for email provider)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "messageId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/send_elixir_notification": {
      "post": {
        "summary": "Send notification to frontend via Elixir server",
        "description": "Send real-time notifications to frontend users through Elixir WebSocket server. Used for AI responses, drafts, and streaming chunks.",
        "operationId": "send_elixir_notification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "businessId",
                  "userId",
                  "sessionId",
                  "content"
                ],
                "properties": {
                  "businessId": {
                    "type": "string",
                    "description": "Business ID (tenant_id)"
                  },
                  "userId": {
                    "type": "string",
                    "description": "User ID to notify"
                  },
                  "sessionId": {
                    "type": "string",
                    "description": "Session ID for the conversation"
                  },
                  "messageId": {
                    "type": "string",
                    "description": "Message ID (optional, auto-generated if not provided)"
                  },
                  "content": {
                    "type": "string",
                    "description": "The notification content/message"
                  },
                  "context": {
                    "type": "object",
                    "description": "Additional context data (actions, drafts, streaming info, etc.)"
                  },
                  "draft": {
                    "type": "object",
                    "description": "Draft data if creating/updating a draft"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/broadcast_websocket_message": {
      "post": {
        "summary": "Broadcast message to WebSocket clients",
        "description": "Broadcasts a message to WebSocket clients connected to a specific business or user. Use this to send real-time updates, notifications, or AI responses to operators or customers.",
        "operationId": "broadcast_websocket_message",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "target",
                  "event",
                  "data"
                ],
                "properties": {
                  "target": {
                    "type": "string",
                    "enum": [
                      "business",
                      "user"
                    ],
                    "description": "Broadcast target: \"business\" broadcasts to all business connections, \"user\" broadcasts to specific user"
                  },
                  "businessId": {
                    "type": "string",
                    "description": "Business ID to broadcast to (required if target is \"business\")"
                  },
                  "userId": {
                    "type": "string",
                    "description": "User ID to broadcast to (required if target is \"user\")"
                  },
                  "event": {
                    "type": "string",
                    "description": "Event name for the WebSocket message"
                  },
                  "data": {
                    "type": "object",
                    "description": "Payload data to send"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Broadcast sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "recipientCount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}