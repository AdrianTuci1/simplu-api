{
  "openapi": "3.0.0",
  "info": {
    "title": "Query Tools API",
    "version": "1.3.0",
    "description": "Read-only queries for business data with support for nested field searches and complex filters"
  },
  "paths": {
    "/query_resources": {
      "post": {
        "summary": "Query resources (operators) via /api/resources",
        "description": "READ-ONLY queries for all resource types. Supports:\n\n**Resource Types:** appointment, patient, treatment, medic, service, setting, plan, dental-chart\n\n**Actions:**\n- list: Get multiple resources with filters\n- get: Get single resource by resourceId\n\n**Nested Field Search:**\nYou can filter by nested fields using dot notation in params:\n\n**For appointments:**\n- data.patient.name - Patient name in appointment\n- data.patient.id - Patient ID in appointment  \n- data.medic.name - Medic name in appointment\n- data.treatment.name - Treatment name in appointment\n- data.status - Appointment status (scheduled, confirmed, completed, cancelled)\n- startDate/endDate - Date range filters\n\n**For patients:**\n- data.patientName - Patient full name\n- data.patientPhone - Patient phone number\n- data.patientEmail - Patient email\n\n**For plans (treatment plans):**\n- data.patientId - Patient ID (REQUIRED - cannot search by name directly)\n- data.status - Plan status (draft, proposed, accepted, in_progress, completed, cancelled)\n\n**For dental-chart:**\n- data.patientId - Patient ID (REQUIRED - cannot search by name directly)\n\n**For treatments/services:**\n- data.treatmentName - Treatment name\n- data.price - Treatment price\n- data.duration - Treatment duration\n\n**For medics:**\n- data.medicName - Medic name\n- data.userId - User ID linked to medic\n\n**IMPORTANT WORKFLOW for plans and dental-charts:**\n1. First query patient by name: resourceType=patient, params={data.patientName: 'Name'}\n2. Extract patientId from result\n3. Then query plan/chart: resourceType=plan, params={data.patientId: 'extracted_id'}\n\n**Search Features:**\n- Case-insensitive partial matching\n- Combine multiple filters\n- Date range support (startDate/endDate for appointments)\n- Sort and pagination support",
        "operationId": "query_resources",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["businessId", "locationId", "action", "resourceType"],
                "properties": {
                  "businessId": { 
                    "type": "string",
                    "description": "Business ID from context"
                  },
                  "locationId": { 
                    "type": "string",
                    "description": "Location ID from context"
                  },
                  "action": { 
                    "type": "string", 
                    "enum": ["list", "get"],
                    "description": "list for multiple resources, get for single resource by ID"
                  },
                  "resourceType": { 
                    "type": "string",
                    "description": "Resource type: appointment, patient, treatment, medic, service, setting, plan, dental-chart",
                    "enum": ["appointment", "patient", "treatment", "medic", "service", "setting", "plan", "dental-chart"]
                  },
                  "resourceId": { 
                    "type": "string",
                    "description": "Resource ID (required only for action=get)"
                  },
                  "params": { 
                    "type": "object",
                    "description": "Filter parameters using nested field notation (e.g., data.patientName, data.patient.name, data.status)",
                    "properties": {
                      "data.patientName": {
                        "type": "string",
                        "description": "For patient search"
                      },
                      "data.patient.name": {
                        "type": "string",
                        "description": "For appointment search by patient name"
                      },
                      "data.patientId": {
                        "type": "string",
                        "description": "For plan/dental-chart search by patient ID"
                      },
                      "data.status": {
                        "type": "string",
                        "description": "Status filter (appointment, plan)"
                      },
                      "startDate": {
                        "type": "string",
                        "description": "Start date for range (YYYY-MM-DD)"
                      },
                      "endDate": {
                        "type": "string",
                        "description": "End date for range (YYYY-MM-DD)"
                      }
                    }
                  }
                }
              },
              "examples": {
                "searchPatientByName": {
                  "summary": "Search patient by name",
                  "value": {
                    "businessId": "B0100001",
                    "locationId": "L0100001",
                    "action": "list",
                    "resourceType": "patient",
                    "params": {
                      "data.patientName": "Maria Ionescu"
                    }
                  }
                },
                "searchAppointmentsByPatient": {
                  "summary": "Search appointments by patient name",
                  "value": {
                    "businessId": "B0100001",
                    "locationId": "L0100001",
                    "action": "list",
                    "resourceType": "appointment",
                    "params": {
                      "data.patient.name": "Ion Popescu",
                      "startDate": "2025-10-14",
                      "endDate": "2025-10-20"
                    }
                  }
                },
                "getTreatmentPlanByPatientId": {
                  "summary": "Get treatment plan by patient ID (2-step workflow)",
                  "value": {
                    "businessId": "B0100001",
                    "locationId": "L0100001",
                    "action": "list",
                    "resourceType": "plan",
                    "params": {
                      "data.patientId": "P0100123",
                      "data.status": "accepted"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": { 
          "200": { 
            "description": "Successful query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "array",
                      "description": "Array of resources matching the query"
                    },
                    "count": { 
                      "type": "number",
                      "description": "Total number of results"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/query_patient_booking": {
      "post": {
        "summary": "Query patient-booking endpoints",
        "description": "READ-ONLY queries for patient booking system.\n\n**Actions:**\n- available-dates: Get available dates in a range (requires from, to params)\n- day-slots: Get available time slots for a specific day (requires date param, optional: serviceId, medicId)\n- history: Get booking history for a patient (optional: accessCode for patient authentication)\n\n**Use Cases:**\n- Patient wants to book appointment: Use available-dates → pick date → use day-slots → show available times\n- Check medic availability: Use day-slots with medicId filter\n- Check service availability: Use day-slots with serviceId filter\n- View patient's past appointments: Use history with accessCode\n\n**Note:** For listing services/treatments, use query_resources with resourceType=treatment instead.",
        "operationId": "query_patient_booking",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["businessId", "locationId", "action"],
                "properties": {
                  "businessId": { 
                    "type": "string",
                    "description": "Business ID from context"
                  },
                  "locationId": { 
                    "type": "string",
                    "description": "Location ID from context"
                  },
                  "action": { 
                    "type": "string", 
                    "enum": ["available-dates", "day-slots", "history"],
                    "description": "Action to perform: available-dates (date range), day-slots (time slots for day), history (booking history)"
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "type": "string",
                        "description": "Start date for available-dates (YYYY-MM-DD)"
                      },
                      "to": {
                        "type": "string",
                        "description": "End date for available-dates (YYYY-MM-DD)"
                      },
                      "date": { 
                        "type": "string", 
                        "description": "Date for day-slots (YYYY-MM-DD, required for day-slots)" 
                      },
                      "serviceId": { 
                        "type": "string",
                        "description": "Filter by service/treatment ID"
                      },
                      "medicId": { 
                        "type": "string",
                        "description": "Filter by medic ID"
                      }
                    }
                  },
                  "accessCode": { 
                    "type": "string",
                    "description": "Patient access code (for history action)"
                  }
                }
              },
              "examples": {
                "getAvailableDates": {
                  "summary": "Get available dates",
                  "value": {
                    "businessId": "B0100001",
                    "locationId": "L0100001",
                    "action": "available-dates",
                    "params": {
                      "from": "2025-10-14",
                      "to": "2025-10-30"
                    }
                  }
                },
                "getTimeSlotsForDay": {
                  "summary": "Get time slots for specific day",
                  "value": {
                    "businessId": "B0100001",
                    "locationId": "L0100001",
                    "action": "day-slots",
                    "params": {
                      "date": "2025-10-15",
                      "serviceId": "T0100001"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": { "200": { "description": "Successful query" } }
      }
    }
  }
}
