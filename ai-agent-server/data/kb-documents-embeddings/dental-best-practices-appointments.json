{
  "id": "dental-best-practices-appointments",
  "title": "Best Practices: appointments",
  "text": "# Best Practices: appointments\n\n**Document Type:** best-practices\n**Category:** appointments\n**Business Type:** dental\n\n---\n\n## CRITICE - Înainte de a crea programarea:\n\n- ⚠️ **CRITICĂ:** NU poți crea programare fără pacient și tratament EXISTENT în sistem!\n- ⚠️ **CRITICĂ:** ÎNTOTDEAUNA verifică dacă pacientul există ÎNAINTE de programare\n- ⚠️ **CRITICĂ:** ÎNTOTDEAUNA verifică dacă tratamentul există ÎNAINTE de programare\n- ⚠️ **CRITICĂ:** Dacă pacientul NU există, GHIDEAZĂ operatorul să-l creeze MAI ÎNTÂI\n- ⚠️ **CRITICĂ:** Dacă tratamentul NU există, GHIDEAZĂ operatorul să-l creeze MAI ÎNTÂI\n- ⚠️ **CRITICĂ:** Folosește noua structură cu **services** (PLURAL, ARRAY) nu service (singular)!\n\n## VERIFICĂRI OBLIGATORII:\n\n### 1. Working Hours\n- VERIFICĂ WORKING-HOURS ÎNTOTDEAUNA înainte de programare\n- Ora trebuie să fie între startTime și endTime pentru ziua respectivă\n- Verifică că ziua are isWorking: true (nu programa în zilele libere)\n\n### 2. Disponibilitate Medic\n- Verifică disponibilitatea medicului (nu suprapune programări)\n- Asigură-te că medicul există și este disponibil\n- Verifică dutyDays (zilele de lucru ale medicului)\n\n### 3. Structura Datelor\n- Folosește **services** (ARRAY, PLURAL) pentru noua structură\n- Fiecare serviciu în array trebuie să aibă: id, name, duration (number), price\n- Duration este NUMBER, nu string!\n- Calculează prețul total în câmpul price (suma tuturor serviciilor)\n\n## STRUCTURA CORECTĂ (NOUA VERSIUNE):\n\n```\ndata: {\n  date: 'YYYY-MM-DD',\n  time: 'HH:mm',\n  patient: {\n    id: 'pa2508-00015',\n    name: 'Nume Complet'\n  },\n  doctor: {\n    id: 'uuid-medic',\n    name: 'Dr. Nume'\n  },\n  services: [  // ARRAY!\n    {\n      id: 'tr2508-00001',\n      name: 'Consultatie',\n      duration: 30,  // NUMBER!\n      price: 150\n    }\n  ],\n  price: 150,  // Total\n  status: 'scheduled'\n}\n```\n\n## CÂMPURI OBLIGATORII:\n\n- ✅ date (YYYY-MM-DD)\n- ✅ time (HH:mm)\n- ✅ patient.id și patient.name\n- ✅ doctor.id și doctor.name\n- ✅ services (ARRAY cu cel puțin un serviciu)\n- ✅ services[].id, services[].name, services[].duration\n- ✅ price (total)\n- ✅ status (default: 'scheduled')\n\n## WORKFLOW OBLIGATORIU:\n\n1. **Verifică pacient** → Query patient by name\n2. **Dacă lipsește** → Ghidează crearea pacientului\n3. **Verifică tratament(e)** → Query treatments\n4. **Dacă lipsește** → Ghidează crearea tratamentului\n5. **Verifică working hours** → Query settings type='working-hours'\n6. **Verifică disponibilitate** → Query appointments pentru data/ora\n7. **Verifică medic** → Query medics și verifică disponibilitate\n8. **APOI creează programarea** → call_frontend_function('createResource', ...)\n\n## CĂUTARE ÎN APPOINTMENTS:\n\n### După pacient:\n```\nparams: {'data.patient.name': 'Maria Ionescu'}\n```\n\n### După medic:\n```\nparams: {'data.doctor.name': 'Dr. Popescu'}\n// SAU\nparams: {'data.medic.name': 'Dr. Popescu'}  // alias\n```\n\n### După serviciu (noua structură):\n```\nparams: {'data.services[].name': 'Consultatie'}\n```\n\n### După status:\n```\nparams: {'data.status': 'scheduled'}\n```\n\n### După dată (range):\n```\nparams: {\n  startDate: '2025-10-20',  // TOP-LEVEL, nu data.*\n  endDate: '2025-10-30'\n}\n```\n\n## STATUSURI VALIDE:\n\n- `scheduled` - Programată (default)\n- `confirmed` - Confirmată\n- `completed` - Completată\n- `cancelled` - Anulată\n- `no_show` - Pacient absent\n\n## GREȘELI COMUNE - NU FACE:\n\n❌ service (singular) - folosește services (plural, array)\n❌ duration ca string - folosește number\n❌ să creezi programare fără să verifici pacient/tratament\n❌ să programezi în afara working hours\n❌ să suprapui programări pentru același medic\n❌ să folosești data.startDate - folosește startDate (top-level)\n❌ să cauți după nume pacient fără prefix data.patient.name\n\n## BACKWARD COMPATIBILITY:\n\nSistemul poate avea programări vechi cu structura:\n- `service` (singular, object)\n- `service.duration` (string)\n\nCând CITEȘTI programări, suportă ambele structuri.\nCând CREEZI programări NOI, folosește ÎNTOTDEAUNA noua structură cu `services` (array).\n\n## TIPS:\n\n1. Întotdeauna verifică existența resurselor înainte de a crea programarea\n2. Folosește nested field search pentru filtrare (data.patient.name, etc.)\n3. Pentru multiple servicii, adaugă-le toate în array-ul services\n4. Calculează prețul total sumând prețurile tuturor serviciilor\n5. Verifică că medicul lucrează în ziua respectivă (dutyDays)\n",
  "metadata": {
    "businessType": "dental",
    "version": "2.0.0",
    "lastUpdated": "2025-10-16",
    "type": "best-practices",
    "category": "appointments",
    "documentId": "dental-best-practices-appointments",
    "source": "dental-knowledge-base"
  }
}
