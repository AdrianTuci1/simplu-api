{
  "id": "dental-conversation-pattern-createAppointment",
  "title": "Conversation Pattern: Operator vrea să creeze o programare nouă",
  "text": "# Conversation Pattern: Operator vrea să creeze o programare nouă\n\n**Document Type:** conversation-pattern\n**Business Type:** dental\n\n---\n\n**Scenario:** Operator vrea să creeze o programare nouă\n**Critical:** NU poți crea programare fără pacient și tratament existent!\n\n**Steps:**\n  1.     **Step:** 1\n    **Action:** Identifică pacientul\n    **Question:** Pentru cine este programarea? (nume pacient)\n\n  2.     **Step:** 2\n    **Action:** VERIFICĂ OBLIGATORIU dacă pacientul există\n    **Tool:** query_app_server\n\n    **Parameters:**\n      **Module:** resources\n      **Action:** list\n      **Resource Type:** patient\n\n      **Params:**\n        **Name:** nume_pacient\n    **Critical:** DACĂ PACIENTUL NU EXISTĂ:\n\n    **If Not Exists:**\n      - NU crea programarea!\n      - Informează operatorul: 'Pacientul [nume] nu există în sistem.'\n      - Sugerează: 'Trebuie să creăm mai întâi pacientul. Aveți datele de contact (telefon, email)?'\n      - Ghidează crearea pacientului: call_frontend_function('createResource', {resourceType: 'patient', data: {...}})\n      - După crearea pacientului, APOI continuă cu programarea\n    **If Exists:** Salvează patient.id și patient.name pentru programare\n\n  3.     **Step:** 3\n    **Action:** Identifică tratamentul necesar\n    **Question:** Ce tratament/serviciu? (consultație, detartraj, implant, etc.)\n\n  4.     **Step:** 4\n    **Action:** VERIFICĂ OBLIGATORIU dacă tratamentul există\n    **Tool:** query_app_server\n\n    **Parameters:**\n      **Module:** resources\n      **Action:** list\n      **Resource Type:** treatment\n    **Critical:** DACĂ TRATAMENTUL NU EXISTĂ:\n\n    **If Not Exists:**\n      - NU crea programarea!\n      - Informează operatorul: 'Tratamentul [nume] nu există în sistem.'\n      - Sugerează: 'Trebuie să adăugăm tratamentul. Ce preț și durată are?'\n      - Ghidează crearea tratamentului: call_frontend_function('createResource', {resourceType: 'treatment', data: {treatmentType: '...', price: X, duration: Y}})\n      - După crearea tratamentului, APOI continuă cu programarea\n    **If Exists:** Salvează treatment.id, treatment.name, treatment.duration pentru programare\n\n  5.     **Step:** 5\n    **Action:** VERIFICĂ working-hours și disponibilitate\n\n    **Substeps:**\n      - 1. Query working-hours: verifică că ziua și ora sunt în programul de lucru\n      - 2. Dacă ora e în afara programului, RESPINGE și sugerează alternative\n      - 3. Query programări existente pentru data/ora dorită\n      - 4. Verifică că nu se suprapune cu alte programări\n\n  6.     **Step:** 6\n    **Action:** Selectează medicul disponibil\n    **Tool:** query_app_server\n\n    **Parameters:**\n      **Module:** resources\n      **Action:** list\n      **Resource Type:** medic\n    **Note:** Verifică disponibilitatea medicului pentru data/ora selectată\n\n  7.     **Step:** 7\n    **Action:** DOAR ACUM creează programarea\n    **Tool:** call_frontend_function\n    **Function:** createResource\n\n    **Requirements:**\n      - Pacient TREBUIE să existe (verificat în step 2)\n      - Tratament TREBUIE să existe (verificat în step 4)\n      - Ora TREBUIE să fie în working-hours (verificat în step 5)\n      - Medic TREBUIE să fie disponibil (verificat în step 6)\n\n    **Parameters:**\n      **Resource Type:** appointment\n\n      **Data:**\n        **Date:** YYYY-MM-DD\n        **Time:** HH:mm\n\n        **Patient:**\n          **Id:** from_step_2\n          **Name:** from_step_2\n\n        **Service:**\n          **Id:** from_step_4\n          **Name:** from_step_4\n          **Duration:** from_step_4\n\n        **Doctor:**\n          **Id:** from_step_6\n          **Name:** from_step_6\n        **Price:** from_treatment\n        **Status:** scheduled\n        **Service Duration:** from_treatment_duration\n\n  8.     **Step:** 8\n    **Action:** Confirmă succesul\n    **Response:** Programare creată cu succes pentru [pacient], [data] la [ora], [tratament] cu [doctor].\n\n**Example:** User: 'Programare pentru Maria Ionescu mâine la 14:00, consultație'\n\nAI Process:\n1. [query patient 'Maria Ionescu'] → NU EXISTĂ\n2. AI: 'Pacientul Maria Ionescu nu există. Trebuie să-l creăm. Aveți număr de telefon?'\n3. User: '0712345678'\n4. [call_frontend_function('createResource', {resourceType: 'patient', data: {patientName: 'Maria Ionescu', phone: '0712345678'}})] → CREAT cu id: pa2508-00015\n5. [query treatment 'consultație'] → EXISTĂ (tr2508-00001, duration: 30, price: 150)\n6. [query working-hours] → Mâine (Marți) 09:00-17:00, 14:00 OK\n7. [query appointments mâine] → Slot liber la 14:00\n8. [query medics] → Dr. Tucean disponibil\n9. [call_frontend_function('createResource', {resourceType: 'appointment', data: {...}})] → SUCCESS\n10. AI: 'Perfect! Programare creată pentru Maria Ionescu, mâine la 14:00, consultație cu Dr. Tucean.'\n",
  "metadata": {
    "businessType": "dental",
    "version": "1.0.0",
    "lastUpdated": "2025-10-10",
    "type": "conversation-pattern",
    "patternKey": "createAppointment",
    "scenario": "Operator vrea să creeze o programare nouă",
    "documentId": "dental-conversation-pattern-createAppointment",
    "source": "dental-knowledge-base"
  }
}