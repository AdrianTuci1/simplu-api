{
  "id": "dental-conversation-pattern-createAppointment",
  "title": "Conversation Pattern: Operator vrea să creeze o programare nouă",
  "content": "{\n  \"scenario\": \"Operator vrea să creeze o programare nouă\",\n  \"critical\": \"NU poți crea programare fără pacient și tratament existent!\",\n  \"steps\": [\n    {\n      \"step\": 1,\n      \"action\": \"Identifică pacientul\",\n      \"question\": \"Pentru cine este programarea? (nume pacient)\"\n    },\n    {\n      \"step\": 2,\n      \"action\": \"VERIFICĂ OBLIGATORIU dacă pacientul există\",\n      \"tool\": \"query_app_server\",\n      \"parameters\": {\n        \"module\": \"resources\",\n        \"action\": \"list\",\n        \"resourceType\": \"patient\",\n        \"params\": {\n          \"name\": \"nume_pacient\"\n        }\n      },\n      \"critical\": \"DACĂ PACIENTUL NU EXISTĂ:\",\n      \"ifNotExists\": [\n        \"NU crea programarea!\",\n        \"Informează operatorul: 'Pacientul [nume] nu există în sistem.'\",\n        \"Sugerează: 'Trebuie să creăm mai întâi pacientul. Aveți datele de contact (telefon, email)?'\",\n        \"Ghidează crearea pacientului: call_frontend_function('createResource', {resourceType: 'patient', data: {...}})\",\n        \"După crearea pacientului, APOI continuă cu programarea\"\n      ],\n      \"ifExists\": \"Salvează patient.id și patient.name pentru programare\"\n    },\n    {\n      \"step\": 3,\n      \"action\": \"Identifică tratamentul necesar\",\n      \"question\": \"Ce tratament/serviciu? (consultație, detartraj, implant, etc.)\"\n    },\n    {\n      \"step\": 4,\n      \"action\": \"VERIFICĂ OBLIGATORIU dacă tratamentul există\",\n      \"tool\": \"query_app_server\",\n      \"parameters\": {\n        \"module\": \"resources\",\n        \"action\": \"list\",\n        \"resourceType\": \"treatment\"\n      },\n      \"critical\": \"DACĂ TRATAMENTUL NU EXISTĂ:\",\n      \"ifNotExists\": [\n        \"NU crea programarea!\",\n        \"Informează operatorul: 'Tratamentul [nume] nu există în sistem.'\",\n        \"Sugerează: 'Trebuie să adăugăm tratamentul. Ce preț și durată are?'\",\n        \"Ghidează crearea tratamentului: call_frontend_function('createResource', {resourceType: 'treatment', data: {treatmentType: '...', price: X, duration: Y}})\",\n        \"După crearea tratamentului, APOI continuă cu programarea\"\n      ],\n      \"ifExists\": \"Salvează treatment.id, treatment.name, treatment.duration pentru programare\"\n    },\n    {\n      \"step\": 5,\n      \"action\": \"VERIFICĂ working-hours și disponibilitate\",\n      \"substeps\": [\n        \"1. Query working-hours: verifică că ziua și ora sunt în programul de lucru\",\n        \"2. Dacă ora e în afara programului, RESPINGE și sugerează alternative\",\n        \"3. Query programări existente pentru data/ora dorită\",\n        \"4. Verifică că nu se suprapune cu alte programări\"\n      ]\n    },\n    {\n      \"step\": 6,\n      \"action\": \"Selectează medicul disponibil\",\n      \"tool\": \"query_app_server\",\n      \"parameters\": {\n        \"module\": \"resources\",\n        \"action\": \"list\",\n        \"resourceType\": \"medic\"\n      },\n      \"note\": \"Verifică disponibilitatea medicului pentru data/ora selectată\"\n    },\n    {\n      \"step\": 7,\n      \"action\": \"DOAR ACUM creează programarea\",\n      \"tool\": \"call_frontend_function\",\n      \"function\": \"createResource\",\n      \"requirements\": [\n        \"Pacient TREBUIE să existe (verificat în step 2)\",\n        \"Tratament TREBUIE să existe (verificat în step 4)\",\n        \"Ora TREBUIE să fie în working-hours (verificat în step 5)\",\n        \"Medic TREBUIE să fie disponibil (verificat în step 6)\"\n      ],\n      \"parameters\": {\n        \"resourceType\": \"appointment\",\n        \"data\": {\n          \"date\": \"YYYY-MM-DD\",\n          \"time\": \"HH:mm\",\n          \"patient\": {\n            \"id\": \"from_step_2\",\n            \"name\": \"from_step_2\"\n          },\n          \"service\": {\n            \"id\": \"from_step_4\",\n            \"name\": \"from_step_4\",\n            \"duration\": \"from_step_4\"\n          },\n          \"doctor\": {\n            \"id\": \"from_step_6\",\n            \"name\": \"from_step_6\"\n          },\n          \"price\": \"from_treatment\",\n          \"status\": \"scheduled\",\n          \"serviceDuration\": \"from_treatment_duration\"\n        }\n      }\n    },\n    {\n      \"step\": 8,\n      \"action\": \"Confirmă succesul\",\n      \"response\": \"Programare creată cu succes pentru [pacient], [data] la [ora], [tratament] cu [doctor].\"\n    }\n  ],\n  \"example\": \"User: 'Programare pentru Maria Ionescu mâine la 14:00, consultație'\\n\\nAI Process:\\n1. [query patient 'Maria Ionescu'] → NU EXISTĂ\\n2. AI: 'Pacientul Maria Ionescu nu există. Trebuie să-l creăm. Aveți număr de telefon?'\\n3. User: '0712345678'\\n4. [call_frontend_function('createResource', {resourceType: 'patient', data: {patientName: 'Maria Ionescu', phone: '0712345678'}})] → CREAT cu id: pa2508-00015\\n5. [query treatment 'consultație'] → EXISTĂ (tr2508-00001, duration: 30, price: 150)\\n6. [query working-hours] → Mâine (Marți) 09:00-17:00, 14:00 OK\\n7. [query appointments mâine] → Slot liber la 14:00\\n8. [query medics] → Dr. Tucean disponibil\\n9. [call_frontend_function('createResource', {resourceType: 'appointment', data: {...}})] → SUCCESS\\n10. AI: 'Perfect! Programare creată pentru Maria Ionescu, mâine la 14:00, consultație cu Dr. Tucean.'\"\n}",
  "metadata": {
    "businessType": "dental",
    "version": "1.0.0",
    "lastUpdated": "2025-10-10",
    "type": "conversation-pattern",
    "patternKey": "createAppointment",
    "scenario": "Operator vrea să creeze o programare nouă"
  }
}